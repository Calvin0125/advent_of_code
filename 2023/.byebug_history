continue
seed_ranges
continue
seed_ranges
continue
maps['seed_to_soil']
exit
maps['humidity_to_location']
maps['temperature_to_humidity']
maps['light_to_temperature']
maps['water_to_light']
maps[
maps['fertilizer_to_water']
maps['soil_to_fertilizer']
maps['seed_to_soil']
maps['seed_to_soil'[
maps.keys
exit
current_map
continue
maps
current_map
exit
continue
my_numbers
continue
winning_numbers
exit
digits
continue
digits
continue
digits
continue
digits
continue
digits
continue
digits.join('')
continue
digits.join('')
exit
input[line_index - 1][gear_index + 1]
continue
exit
digits
place
visited_places
line
digits.join('')
continue
exit
continue
digits.join('')
continue
digits.join('')
continue
digits.join('')
continue
digits.join('')
exit
adjacent_digits
continue
is_symbol?(input[line_index][index - 1]) || # left
      is_symbol?(input[line_index][index + 1]) || # right
      line_index > 0 && is_symbol?(input[line_index - 1][index]) || # up
      line_index > 0 && is_symbol?(input[line_index - 1][index - 1]) || # up left
      line_index > 0 && is_symbol?(input[line_index - 1][index + 1]) || # up right
      line_index < input.length - 1 && is_symbol?(input[line_index + 1][index]) # down
      line_index < input.length - 1 && is_symbol?(input[line_index + 1][index - 1]) || # down left
      line_index < input.length - 1 && is_symbol?(input[line_index + 1][index + 1])
line_index < input.length - 1 && is_symbol?(input[line_index + 1][index + 1])
line_index
input[line_index + 1][index + 1]
input[line_index][index]
index
continue
is_adjacent?(current_digit_indices, line_index, input)
current_digit
continue
exit
adjacent_digits
continue
line_index < input.length - 1 && is_symbol?(input[line_index + 1][index + 1])
index
continue
index
input[line_index + 1][index + 1]
is_symbol?(input[line_index + 1][index + 1])
is_symbol?(input[line_index + 1][index + 1]
line_index < input.length - 1
line_index
line_index < input.length - 1 && is_symbol?(input[line_index + 1][index + 1])
continue
index
continue
current_digit_indices
current_digit
continue
current_digit
continue
current_digit
continue
exit
continue
step
next
line_index < input.length - 1 && is_symbol?(input[line_index + 1][27])
is_adjacent?(current_digit_indices, line_index, input)
current_digit_indices
current_digit
continue
current_digit
continue
current_digit
continue
adjacent_digits
continue
adjacent_digits
exit
continue
line
exit
continue
input[1]
input[0]
input
line
exit
eit
continue
line
is_adjacent?(current_digit_indices, line_index, input)
current_digit
continue
current_digit
adjacent_digits
continue
current_digit_indices
continue
current_digit
current_diigt
is_adjacent?(current_digit_indices, line_index, input)
is_adjacent?(current_digit_indices)
exit
continue
adjacent_digits
input[line_index][91]
current_digit_indices
input[line_index][current_digit_indeces][0]
continue
input[line_index][42]
current_digit_indices
continue
adjacent_digits
continue
powers[0]
continue
ids
continue
ids
continue
ids
continue
ids.sum
ids
exit
continue
ids
id
continue
id
continue
id
exit
continue
ids
continue
ids
valid_sample(sample)
sample
continue
valid_sample(sample)
sample
continue
valid_sample(sample)
sample
continue
valid_sample(sample)
sample
continue
ids
valid_sample(sample)
sample
continue
valid_sample(sample)
sample
continue
sample
samle
continue
numbers
continue
numbers
continue
numbers
